// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherForecast.Infrastructure.Persistence.DBConexion;

#nullable disable

namespace WeatherForecast.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherForecast.Infrastructure.Persistence.Entities.AccessLogEntity", b =>
                {
                    b.Property<int>("AccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessID"));

                    b.Property<DateTime>("AccessDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("AccessDateTime");

                    b.Property<string>("AccessStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AccessStatus");

                    b.Property<string>("AccessType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccessType");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("AccessID");

                    b.HasIndex("MemberID");

                    b.ToTable("AccessLogs");
                });

            modelBuilder.Entity("WeatherForecast.Infrastructure.Persistence.Entities.MemberEntity", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FullName")
                        .HasAnnotation("Relational:JsonPropertyName", "fullName");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("JoinDate")
                        .HasAnnotation("Relational:JsonPropertyName", "joinDate");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone")
                        .HasAnnotation("Relational:JsonPropertyName", "phone");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("WeatherForecast.Infrastructure.Persistence.Entities.AccessLogEntity", b =>
                {
                    b.HasOne("WeatherForecast.Infrastructure.Persistence.Entities.MemberEntity", "Member")
                        .WithMany("AccessLogs")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WeatherForecast.Infrastructure.Persistence.Entities.MemberEntity", b =>
                {
                    b.Navigation("AccessLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
